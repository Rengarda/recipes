import * as model from './model.js';
import { MODAL_CLOSE_SEC } from './config.js';
import recipeView from './views/recipeView.js';
import searchView from './views/searchView.js';
import resultsView from './views/resultsView.js';
import paginationView from './views/paginationView.js';
import bookmarksView from './views/bookmarksView.js';
import addRecipeView from './views/addRecipeView.js';

import 'core-js/stable';
import 'regenerator-runtime/runtime';
import { async } from 'regenerator-runtime';

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);

    if (!id) return;
    recipeView.renderSpinner();

    // 0) –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    resultsView.update(model.getSearchResultsPage());

    // 1) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–æ–∫
    bookmarksView.update(model.state.bookmarks);

    // 2) –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞
    await model.loadRecipe(id);

    // 3) –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
    recipeView.render(model.state.recipe);
  } catch (err) {
    recipeView.renderError();
    console.error(err);
  }
};

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
const controlSearchResults = async function () {
  try {
    resultsView.renderSpinner();

    // 1) –ü–æ–ª—É—á–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    const query = searchView.getQuery();
    if (!query) return;

    // 2) –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    await model.loadSearchResults(query);

    // 3) –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    resultsView.render(model.getSearchResultsPage());

    // 4) –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    paginationView.render(model.state.search);
  } catch (err) {
    console.log(err);
  }
};

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
const controlPagination = function (goToPage) {
  // 1) –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ù–û–í–´–ï —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  resultsView.render(model.getSearchResultsPage(goToPage));

  // 2) –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ù–û–í–´–ï –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  paginationView.render(model.state.search);
};

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ—Ä—Ü–∏–π
const controlServings = function (newServings) {
  // –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
  model.updateServings(newServings);

  // –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
  recipeView.update(model.state.recipe);
};

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–∫–∞–º–∏
const controlAddBookmark = function () {
  // 1) –î–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É
  if (!model.state.recipe.bookmarked) model.addBookmark(model.state.recipe);
  else model.deleteBookmark(model.state.recipe.id);

  // 2) –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
  recipeView.update(model.state.recipe);

  // 3) –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫–∏
  bookmarksView.render(model.state.bookmarks);
};

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–æ–∫
const controlBookmarks = function () {
  bookmarksView.render(model.state.bookmarks);
};

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
const controlAddRecipe = async function (newRecipe) {
  try {
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    addRecipeView.renderSpinner();

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
    await model.uploadRecipe(newRecipe);
    console.log(model.state.recipe);

    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç
    recipeView.render(model.state.recipe);

    // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
    addRecipeView.renderMessage();

    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–ª–∞–¥–æ–∫
    bookmarksView.render(model.state.bookmarks);

    // –ò–∑–º–µ–Ω–∏—Ç—å ID –≤ URL
    window.history.pushState(null, '', `#${model.state.recipe.id}`);

    // –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —Ñ–æ—Ä–º—ã
    setTimeout(function () {
      addRecipeView.toggleWindow();
    }, MODAL_CLOSE_SEC * 1000);
  } catch (err) {
    console.error('üí•', err);
    addRecipeView.renderError(err.message);
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
const init = function () {
  bookmarksView.addHandlerRender(controlBookmarks);
  recipeView.addHandlerRender(controlRecipes);
  recipeView.addHandlerUpdateServings(controlServings);
  recipeView.addHandlerAddBookmark(controlAddBookmark);
  searchView.addHandlerSearch(controlSearchResults);
  paginationView.addHandlerClick(controlPagination);
  addRecipeView.addHandlerUpload(controlAddRecipe);
};
init();
